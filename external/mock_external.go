// Code generated by MockGen. DO NOT EDIT.
// Source: external/external.go

// Package external is a generated GoMock package.
package external

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	entity "github.com/michaelsidharta/cubic-weight/entity"
	reflect "reflect"
)

// MockIAPI is a mock of IAPI interface
type MockIAPI struct {
	ctrl     *gomock.Controller
	recorder *MockIAPIMockRecorder
}

// MockIAPIMockRecorder is the mock recorder for MockIAPI
type MockIAPIMockRecorder struct {
	mock *MockIAPI
}

// NewMockIAPI creates a new mock instance
func NewMockIAPI(ctrl *gomock.Controller) *MockIAPI {
	mock := &MockIAPI{ctrl: ctrl}
	mock.recorder = &MockIAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIAPI) EXPECT() *MockIAPIMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockIAPI) Get(ctx context.Context, URL string) (entity.APIResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, URL)
	ret0, _ := ret[0].(entity.APIResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockIAPIMockRecorder) Get(ctx, URL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIAPI)(nil).Get), ctx, URL)
}
